// Generated by dojo-bindgen on Tue, 29 Jul 2025 12:25:12 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using Enum = Dojo.Starknet.Enum;
using BigInteger = System.Numerics.BigInteger;

// Type definition for `evolute_duel::types::packing::PlayerSide` enum
public abstract record PlayerSide() : Enum {
    public record None() : PlayerSide;
    public record Blue() : PlayerSide;
    public record Red() : PlayerSide;
}

// Type definition for `core::option::Option` enum
public abstract record Option<A>() : Enum {
    public record Some(A value) : Option<A>;
    public record None() : Option<A>;
}


// Model definition for `evolute_duel::models::game::Move` model
public class evolute_duel_Move : ModelInstance {
    [ModelField("id")]
        public FieldElement id;

        [ModelField("player_side")]
        public PlayerSide player_side;

        [ModelField("prev_move_id")]
        public Option<FieldElement> prev_move_id;

        [ModelField("tile")]
        public Option<byte> tile;

        [ModelField("rotation")]
        public byte rotation;

        [ModelField("col")]
        public byte col;

        [ModelField("row")]
        public byte row;

        [ModelField("is_joker")]
        public bool is_joker;

        [ModelField("first_board_id")]
        public FieldElement first_board_id;

        [ModelField("timestamp")]
        public ulong timestamp;

        [ModelField("top_tile")]
        public Option<byte> top_tile;

    // Start is called before the first frame update
    void Start() {
    }

    // Update is called once per frame
    void Update() {
    }
}

        