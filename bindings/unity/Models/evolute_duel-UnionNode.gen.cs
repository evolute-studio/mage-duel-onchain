// Generated by dojo-bindgen on Wed, 30 Jul 2025 11:43:10 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using Enum = Dojo.Starknet.Enum;
using BigInteger = System.Numerics.BigInteger;

// Type definition for `evolute_duel::types::packing::PlayerSide` enum
public abstract record PlayerSide() : Enum {
    public record None() : PlayerSide;
    public record Blue() : PlayerSide;
    public record Red() : PlayerSide;
}

// Type definition for `evolute_duel::types::packing::TEdge` enum
public abstract record TEdge() : Enum {
    public record None() : TEdge;
    public record C() : TEdge;
    public record R() : TEdge;
    public record F() : TEdge;
}


// Model definition for `evolute_duel::models::scoring::UnionNode` model
public class evolute_duel_UnionNode : ModelInstance {
    [ModelField("board_id")]
        public FieldElement board_id;

        [ModelField("position")]
        public uint position;

        [ModelField("parent")]
        public uint parent;

        [ModelField("rank")]
        public byte rank;

        [ModelField("blue_points")]
        public ushort blue_points;

        [ModelField("red_points")]
        public ushort red_points;

        [ModelField("open_edges")]
        public byte open_edges;

        [ModelField("contested")]
        public bool contested;

        [ModelField("node_type")]
        public TEdge node_type;

        [ModelField("player_side")]
        public PlayerSide player_side;

    // Start is called before the first frame update
    void Start() {
    }

    // Update is called once per frame
    void Update() {
    }
}

        